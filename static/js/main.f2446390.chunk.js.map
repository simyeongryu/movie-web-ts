{"version":3,"sources":["assets/img/no-image.jpg","Components/Section.tsx","Components/Loader.tsx","Components/ErrorMessage.tsx","Components/Poster.tsx","Pages/Home/HomePresenter.tsx","api.tsx","Pages/Home/index.tsx","Pages/Home/HomeContainer.tsx","Pages/Search/SearchPresenter.tsx","Pages/Search/index.tsx","Pages/Search/SearchContainer.tsx","Pages/TV/TVPresenter.tsx","Pages/TV/index.tsx","Pages/TV/TVContainer.tsx","Pages/NotFoundPage/NotFoundPagePresenter.tsx","Pages/NotFoundPage/index.tsx","Pages/NotFoundPage/NotFoundPageContainer.tsx","Pages/Detail/DetailPresenter.tsx","Pages/Detail/index.tsx","Pages/Detail/DetailContainer.tsx","Components/Header.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Title","span","Grid","title","children","Text","text","Image","props","bgUrl","Rating","ImageContainer","Year","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","slice","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","Section","map","movie","Poster","key","poster_path","original_title","vote_average","release_date","ErrorMessage","api","axios","create","baseURL","baseParams","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","movieApi","HomeContainer","state","data","results","this","setState","console","log","HomePresenter","React","Component","Form","form","Input","input","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","e","preventDefault","searchByTerm","target","a","SearchPresenter","topRated","airingToday","TVContainer","TVPresenter","NotFoundPageContainer","NotFoundPagePresenter","Content","Cover","bgImage","Data","h3","ItemContainer","Item","Divider","Overview","p","Backdrop","result","backdrop_path","runtime","episode_run_time","genres","genre","i","name","overview","DetailContainer","pathname","location","includes","match","push","history","numberId","Number","isNaN","alert","DetailPresenter","SHeader","header","List","ul","li","current","SLink","Link","withRouter","App","Header","exact","path","component","Home","TV","Search","Detail","NotFoundPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2446390.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.a25c1474.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 30px;\n`;\n\nconst Title = styled.span`\n  font-size: 26px;\n  font-weight: 700;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\ninterface SectionProps {\n  title: string;\n  children: any[];\n}\n\nexport default ({ title, children }: SectionProps) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  margin-top: 30px;\n`;\n\nexport default () => (\n  <Container>\n    <span>Loading...</span>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: #e74c3c;\n  font-size: 30px;\n`;\n\ninterface ErrorMessageProps {\n  text: string;\n}\n\nexport default ({ text }: ErrorMessageProps) => (\n  <Container>\n    <Text>{text}</Text>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div<{ bgUrl: string }>`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  margin-bottom: 2px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 2px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\ninterface PosterProps {\n  id: number;\n  imageUrl: string;\n  title: string;\n  rating: number;\n  year: string;\n  isMovie: boolean;\n}\n\nexport default ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie = false\n}: PosterProps) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/img/no-image.jpg\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          &nbsp;{rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.slice(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport Poster from \"../../Components/Poster\";\n\ninterface HomeProps {\n  nowPlaying: any[] | null;\n  upcoming: any[] | null;\n  popular: any[] | null;\n  error: string | null;\n  loading: boolean;\n}\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nexport default ({ nowPlaying, upcoming, popular, error, loading }: HomeProps) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Ryuflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      <Helmet>\n        <title>Movies | Ryuflix</title>\n      </Helmet>\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing Movies\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.slice(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.slice(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.slice(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <ErrorMessage text={error} />}\n      </Container>\n    </>\n  );\n","import axios, { AxiosPromise } from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\"\n});\n\nconst baseParams = {\n  params: {\n    api_key: \"9a8525c940f5235964bb5e78513b8720\",\n    language: \"en-US\"\n  }\n};\n\nexport const tvApi = {\n  topRated() {\n    return api.get(\"tv/top_rated\", baseParams);\n  },\n  popular() {\n    return api.get(\"tv/popular\", baseParams);\n  },\n  airingToday() {\n    return api.get(\"tv/airing_today\", baseParams);\n  },\n  detail(id: number) {\n    return api.get(`tv/${id}`, {\n      params: {\n        api_key: \"9a8525c940f5235964bb5e78513b8720\",\n        language: \"en-US\",\n        append_to_response: \"vidoes\"\n      }\n    });\n  },\n  search(term: string) {\n    return api.get(\"search/tv\", {\n      params: {\n        api_key: \"9a8525c940f5235964bb5e78513b8720\",\n        language: \"en-US\",\n        query: encodeURIComponent(term)\n      }\n    });\n  }\n};\n\nexport const movieApi = {\n  nowPlaying() {\n    return api.get(\"movie/now_playing\", baseParams);\n  },\n  upcoming() {\n    return api.get(\"movie/upcoming\", baseParams);\n  },\n  popular() {\n    return api.get(\"movie/popular\", baseParams);\n  },\n  detail(id: number) {\n    return api.get(`movie/${id}`, {\n      params: {\n        api_key: \"9a8525c940f5235964bb5e78513b8720\",\n        language: \"en-US\",\n        append_to_response: \"videos\"\n      }\n    });\n  },\n  search(term: string) {\n    return api.get(\"search/movie\", {\n      params: {\n        api_key: \"9a8525c940f5235964bb5e78513b8720\",\n        language: \"en-US\",\n        query: encodeURIComponent(term)\n      }\n    });\n  }\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"../../api\";\n\ninterface HomeState {\n  nowPlaying: any[] | null;\n  upcoming: any[] | null;\n  popular: any[] | null;\n  error: string | null;\n  loading: boolean;\n}\n\nclass Home extends React.Component<{}, HomeState> {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying();\n\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming();\n\n      const {\n        data: { results: popular }\n      } = await movieApi.popular();\n\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch (e) {\n      console.log(e);\n      this.setState({ error: \"Can't find movies info\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\ninterface SearchProps {\n  movieResults: any[] | null;\n  tvResults: any[] | null;\n  searchTerm: string;\n  error: string | null;\n  loading: boolean;\n  handleSubmit: (e: React.FormEvent) => void;\n  updateTerm: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport default ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}: SearchProps) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies of TV shows\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <>\n        <Helmet>\n          <title>Loading | Ryuflix</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <>\n        <Helmet>\n          <title>Search | Ryuflix</title>\n        </Helmet>\n        {movieResults && movieResults.length > 0 && (\n          <Section title={\"Movies Results\"}>\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.slice(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title={\"TV Shows Results\"}>\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.slice(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <ErrorMessage text={error} />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length <= 0 &&\n          tvResults.length <= 0 && <ErrorMessage text=\"Nothing Found\" />}\n      </>\n    )}\n  </Container>\n);\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\nimport { stringify } from \"querystring\";\n\ninterface SearchState {\n  movieResults: any[] | null;\n  tvResults: any[] | null;\n  searchTerm: string;\n  error: string | null;\n  loading: boolean;\n}\n\nexport default class extends React.Component<{}, SearchState> {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  // 혹은 React.SyntheticEvent<HTMLInputElement> 로 타이핑 후\n  updateTerm = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    // const { value } = e.currentTarget;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm);\n\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ movieResults, tvResults });\n    } catch (e) {\n      console.log(e);\n      this.setState({ error: \"Can't find search data\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\ninterface TVProps {\n  topRated: any[] | null;\n  popular: any[] | null;\n  airingToday: any[] | null;\n  error: string | null;\n  loading: boolean;\n}\n\nexport default ({ topRated, popular, airingToday, error, loading }: TVProps) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Ryuflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      <Helmet>\n        <title>TV Shows | Ryuflix</title>\n      </Helmet>\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.slice(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.slice(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.slice(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <ErrorMessage text={error} />}\n      </Container>\n    </>\n  );\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\ninterface TVState {\n  topRated: any[] | null;\n  popular: any[] | null;\n  airingToday: any[] | null;\n  error: string | null;\n  loading: boolean;\n}\n\nexport default class extends React.Component<{}, TVState> {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday });\n    } catch (e) {\n      console.log(e);\n      this.setState({ error: \"Can't find TV shows info\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.div`\n  font-size: 30px;\n  color: white;\n`;\n\nexport default () => (\n  <Container>\n    <Text>404 ERROR</Text>\n  </Container>\n);\n","import NotFoundPageContainer from \"./NotFoundPageContainer\";\n\nexport default NotFoundPageContainer;\n","import React from \"react\";\nimport NotFoundPagePresenter from \"./NotFoundPagePresenter\";\n\nexport default class extends React.Component {\n  render() {\n    return <NotFoundPagePresenter />;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div<{ bgImage: string | null }>`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 10px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n  font-weight: 600;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 50%;\n`;\n\nconst Backdrop = styled.div<{ bgImage: string | null }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\ninterface DetailProps {\n  result: {\n    original_title: string;\n    original_name: string;\n    backdrop_path: string;\n    poster_path: string;\n    release_date: string;\n    first_air_date: string;\n    runtime: string;\n    episode_run_time: string;\n    genres: any[];\n    overview: string;\n  } | null;\n  error: string | null;\n  loading: boolean;\n}\n\nexport default ({ result, error, loading }: DetailProps) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Ryuflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <ErrorMessage text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result === null\n            ? \"Not Found\"\n            : result.original_title\n            ? result.original_title\n            : result.original_name}\n          &nbsp;| Ryuflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={\n          result && `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n        }\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result && result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/img/no-image.jpg\")\n          }\n        />\n        <Data>\n          <Title>\n            {result && result.original_title && result.original_title}\n            {result && result.original_name && result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result && result.release_date && result.release_date.slice(0, 4)}\n              {result &&\n                result.first_air_date &&\n                result.first_air_date.slice(0, 4)}\n            </Item>\n            <Divider>|</Divider>\n            <Item>\n              {result && result.runtime && result.runtime}\n              {result && result.episode_run_time && result.episode_run_time[0]}\n              {\" min\"}\n            </Item>\n            <Divider>|</Divider>\n            <Item>\n              {result &&\n                result.genres &&\n                result.genres.map((genre, i) =>\n                  i === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result && result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\ninterface DetailState {\n  result: {\n    original_title: string;\n    original_name: string;\n    backdrop_path: string;\n    poster_path: string;\n    release_date: string;\n    first_air_date: string;\n    runtime: string;\n    episode_run_time: string;\n    genres: any[];\n    overview: string;\n  } | null;\n  error: string | null;\n  loading: boolean;\n  isMovie: boolean;\n}\n\ninterface DetailProps {\n  location: {\n    pathname: string;\n  };\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  history: {\n    push: (url: string) => void;\n  };\n}\nexport default class extends React.Component<DetailProps, DetailState> {\n  constructor(props: any) {\n    super(props);\n\n    const {\n      location: { pathname }\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const numberId = Number(id);\n    const { isMovie } = this.state;\n\n    if (Number.isNaN(numberId)) {\n      alert(\"상세 페이지에 접근할 수 없습니다.\");\n      return push(\"/\");\n    }\n\n    let { result } = this.state;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.detail(numberId));\n      } else {\n        ({ data: result } = await tvApi.detail(numberId));\n      }\n    } catch (e) {\n      console.log(e);\n      this.setState({ error: \"Can't find detail info\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React, { FunctionComponent, ObjectHTMLAttributes } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li<{ current: boolean }>`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#e84118\" : \"transparent\")};\n  transition: border-bottom 0.1s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface HeaderProps {\n  location: {\n    pathname: string;\n  };\n}\n\nexport default withRouter(({ location: { pathname } }: HeaderProps) => (\n  <SHeader>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </SHeader>\n));\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Search from \"./Pages/Search\";\nimport TV from \"./Pages/TV\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport Detail from \"./Pages/Detail\";\nimport Header from \"./Components/Header\";\n\nconst App = () => (\n  <>\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/movie\" component={Home} />\n        <Route exact path=\"/tv\" component={TV} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}